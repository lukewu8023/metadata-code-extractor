[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "metadata-code-extractor"
version = "0.1.0"
description = "An intelligent metadata extraction system for code repositories and documentation"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Metadata Code Extractor Team"}
]
keywords = ["metadata", "code-analysis", "documentation", "llm", "graph-database"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core dependencies
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "pyyaml>=6.0",
    
    # LLM Integration - OpenRouter compatible
    "openai>=1.6.0",
    "requests>=2.31.0",
    
    # Database dependencies - validated versions
    "neo4j==4.4.12",
    "weaviate-client==3.24.2",
    
    # Utility dependencies
    "rich>=13.0.0",  # For beautiful CLI output
    "typer>=0.9.0",  # Alternative to click for modern CLI
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    
    # Code quality
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    
    # Documentation
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    
    # Development tools
    "pre-commit>=3.3.0",
    "ipython>=8.14.0",
]

[project.scripts]
mce = "metadata_code_extractor.cli:main"

[project.urls]
Homepage = "https://github.com/metadata-code-extractor/metadata-code-extractor"
Repository = "https://github.com/metadata-code-extractor/metadata-code-extractor"
Documentation = "https://metadata-code-extractor.readthedocs.io"
"Bug Tracker" = "https://github.com/metadata-code-extractor/metadata-code-extractor/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["metadata_code_extractor*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=metadata_code_extractor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "-v"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["metadata_code_extractor"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "neo4j.*",
    "weaviate.*",
]
ignore_missing_imports = true 